(()=>{"use strict";var __webpack_modules__={92:()=>{eval("\n;// CONCATENATED MODULE: ./js/lib/dom-component.js\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nclass DomComponent {\n  constructor($domElement) {\n    _defineProperty(this, \"$domElement\", void 0);\n    if (!$domElement) {\n      return;\n    }\n    this.$domElement = $domElement;\n    this.$domElement.classList.add('js');\n    [this.baseCSSClass] = this.$domElement.classList;\n  }\n  loaded() {\n    this.$domElement.classList.add('js-loaded');\n  }\n  find(selector, keepAsArray = false) {\n    const found = this.findAll(selector);\n    if (!found) {\n      return false;\n    }\n    if (keepAsArray === false) {\n      return found.length > 1 ? found : found[0];\n    }\n    return found;\n  }\n  findAll(selector) {\n    const found = this.$domElement.querySelectorAll(selector);\n    if (found && found.length) {\n      return Array.from(found);\n    }\n    return found;\n  }\n}\n;// CONCATENATED MODULE: ./js/lib/accessibility.js\nfunction makeUnaccessible(el) {\n  el.setAttribute('aria-hidden', 'true');\n  const $ariaHiddenElements = el.querySelectorAll('[aria-hidden]');\n  const $tabindexElements = el.querySelectorAll('[tabindex]');\n  if ($tabindexElements) {\n    Array.from($tabindexElements).map(el => el.setAttribute('tabindex', -1));\n  }\n  if ($ariaHiddenElements) {\n    Array.from($ariaHiddenElements).map(el => el.setAttribute('aria-hidden', 'true'));\n  }\n}\nfunction makeAccessible(el) {\n  el.setAttribute('aria-hidden', 'false');\n  const $ariaHiddenElements = el.querySelectorAll('[aria-hidden]');\n  const $tabindexElements = el.querySelectorAll('[tabindex]');\n  if ($tabindexElements) {\n    Array.from($tabindexElements).map(el => el.setAttribute('tabindex', ''));\n  }\n  if ($ariaHiddenElements) {\n    Array.from($ariaHiddenElements).map(el => el.setAttribute('aria-hidden', 'false'));\n  }\n}\nfunction hideAllChildrenFromScreenreader(el) {\n  const $links = el.querySelectorAll('a');\n  const $inputs = el.querySelectorAll('input');\n  const $selects = el.querySelectorAll('select');\n  const $buttons = el.querySelectorAll('button');\n  if ($links) {\n    Array.from($links).map(el => el.setAttribute('tabindex', -1));\n  }\n  if ($selects) {\n    Array.from($selects).map(el => el.setAttribute('tabindex', -1));\n  }\n  if ($buttons) {\n    Array.from($buttons).map(el => el.setAttribute('tabindex', -1));\n  }\n  if ($links) {\n    Array.from($inputs).map(el => el.setAttribute('tabindex', -1));\n  }\n}\n;// CONCATENATED MODULE: ./js/services/body.js\nconst bodyService = {\n  lock: function () {\n    document.body.classList.add('lock');\n  },\n  unlock: function () {\n    document.body.classList.remove('lock');\n  },\n  setClass: function (className) {\n    document.body.classList.add(className);\n  },\n  unsetClass: function (className) {\n    document.body.classList.remove(className);\n  },\n  hasClass: function (className) {\n    return document.body.classList.contains(className);\n  }\n};\n/* harmony default export */ const body = (bodyService);\n;// CONCATENATED MODULE: ./js/lib/each.js\nfunction each(nodeList, cb) {\n  if (!nodeList || !nodeList.length) {\n    return;\n  }\n  for (let i = 0; i < nodeList.length; i++) {\n    cb(nodeList[i], i);\n  }\n}\n;// CONCATENATED MODULE: ./header/header.js\nfunction header_defineProperty(e, r, t) { return (r = header_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction header_toPropertyKey(t) { var i = header_toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction header_toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\nclass Header extends DomComponent {\n  constructor($domElement) {\n    super($domElement);\n    header_defineProperty(this, \"_showSubMenu\", false);\n    header_defineProperty(this, \"_$activeSubmenuButton\", null);\n    header_defineProperty(this, \"_$activeSubmenu\", null);\n    setTimeout(() => {\n      this.init();\n      this.sizeContainer();\n      this.attachEvents();\n      this.loaded();\n    });\n  }\n  get showSubMenu() {\n    return this._showSubMenu;\n  }\n  set showSubMenu(shouldShow) {\n    if (shouldShow) {\n      this.$topList.classList.add('showing-submenu');\n    } else {\n      this.$topList.classList.remove('showing-submenu');\n    }\n    this._showSubMenu = shouldShow;\n  }\n  get $activeSubmenuButton() {\n    return this._$activeSubmenuButton;\n  }\n  set $activeSubmenuButton(newButton) {\n    if (this.$activeSubmenuButton) {\n      this.$activeSubmenuButton.classList.remove('open');\n      this.$activeSubmenuButton.parentElement.classList.remove('submenu-open');\n      this.$activeSubmenuButton.setAttribute('aria-expanded', 'false');\n    }\n    if (newButton) {\n      newButton.classList.add('open');\n      newButton.parentElement.classList.add('submenu-open');\n      newButton.setAttribute('aria-expanded', 'true');\n    }\n    this._$activeSubmenuButton = newButton;\n  }\n  get $activeSubMenu() {\n    return this._$activeSubmenu;\n  }\n  set $activeSubMenu(newSubmenu) {\n    if (this.$activeSubMenu) {\n      this.$activeSubMenu.classList.remove('active');\n      makeUnaccessible(this.$activeSubMenu);\n    }\n    if (newSubmenu) {\n      newSubmenu.classList.add('active');\n      makeAccessible(newSubmenu);\n    }\n    this._$activeSubmenu = newSubmenu;\n  }\n  init() {\n    this.$openMegaMenuButton = this.find('[js-menu-button]');\n    this.$closeMegaMenuButton = this.find('[js-close-menu-button]');\n    this.$subMenuButtons = this.findAll('[js-sub-menu-button]');\n    this.$submenuBackButtons = this.findAll('[js-back]');\n    this.$topList = this.find('[js-top-list]');\n    this.$megaMenu = this.find('[js-mega-menu]');\n    this.$searchToggle = this.find('[data-js-open-search]');\n    this.$searchMenu = this.find('[data-js-search-menu]');\n    this.$closeSearchMenu = this.find('[data-js-close-search-menu]');\n    this.$searchForm = this.find('[data-js-search-form]');\n    this.$searchRadioOptions = this.find('input[name=\"search-type\"]');\n    this.$searchInput = this.find('[data-js-search-input]');\n    this.$menuContainer = this.find('.header__mega-menu__container');\n    this.$subMenus = this.findAll('[js-submenu]');\n    this.searchTerm = 's';\n  }\n  attachEvents() {\n    window.addEventListener('resize', this.sizeContainer.bind(this));\n    this.$openMegaMenuButton.addEventListener('click', this.openMegaMenu.bind(this));\n    this.$closeMegaMenuButton.addEventListener('click', this.closeMegaMenu.bind(this));\n    each(this.$subMenuButtons, button => {\n      button.addEventListener('click', this.openSubMenu.bind(this));\n    });\n    each(this.$submenuBackButtons, backButton => {\n      backButton.addEventListener('click', this.closeSubmenu.bind(this));\n    });\n    each(this.$searchRadioOptions, radio => {\n      radio.addEventListener('change', this.searchTypeChange.bind(this));\n    });\n    this.$searchToggle.addEventListener('click', this.toggleSearchMenu.bind(this));\n    this.$closeSearchMenu.addEventListener('click', this.toggleSearchMenu.bind(this));\n    // this.$searchForm.addEventListener('submit', this.hijackSearchSubmit.bind(this));\n  }\n  searchTypeChange(e) {\n    console.log('search change', e);\n    const value = e.target.value;\n    const hiddenInputs = this.$searchForm.querySelectorAll('input[type=\"hidden\"]');\n    each(hiddenInputs, input => {\n      input.remove();\n    });\n    if (value === 'site') {\n      const hiddenInput = '<input type=\"hidden\" value=\"google\" name=\"search-choice\" />';\n      this.$searchForm.insertAdjacentHTML('beforeend', hiddenInput);\n      this.$searchForm.action = UMW_CB_Search_Vars.search_root;\n      this.$searchInput.setAttribute('name', 's');\n    } else {\n      const hiddenInput = '<input type=\"hidden\" value=\"employee\" name=\"post_types\" />';\n      this.$searchForm.insertAdjacentHTML('beforeend', hiddenInput);\n      this.$searchForm.action = UMW_CB_Search_Vars.directory_root;\n      this.$searchInput.setAttribute('name', '_sf_s');\n    }\n  }\n  hijackSearchSubmit(e) {\n    e.preventDefault();\n  }\n  toggleSearchMenu(e) {\n    // leave room for the menu button. Subtract its width from the original menu width\n\n    this.$searchMenu.style.width = `calc(100% - ${this.$openMegaMenuButton.offsetWidth}px)`;\n    this.$searchMenu.classList.toggle('open');\n    if (this.$searchMenu.classList.contains('open')) {\n      this.$searchToggle.setAttribute('aria-expanded', 'true');\n    } else {\n      this.$searchToggle.setAttribute('aria-expanded', 'false');\n    }\n  }\n  sizeContainer() {\n    let topHeight = 0;\n    each(this.$subMenus, submenu => {\n      this.$megaMenu.classList.add('offscreen');\n      submenu.classList.add('offscreen');\n      if (submenu.offsetHeight > topHeight) {\n        topHeight = submenu.offsetHeight;\n        this.$menuContainer.style.minHeight = topHeight + 20 + 'px';\n      }\n      submenu.classList.remove('offscreen');\n      this.$megaMenu.classList.remove('offscreen');\n    });\n  }\n  openMegaMenu() {\n    makeAccessible(this.$closeMegaMenuButton);\n    makeUnaccessible(this.$openMegaMenuButton);\n    makeAccessible(this.$megaMenu);\n    this.$openMegaMenuButton.classList.remove('open');\n    this.$closeMegaMenuButton.classList.add('open');\n    this.$domElement.classList.add('mega-menu-open');\n    body.lock();\n    setTimeout(() => {\n      this.$megaMenu.classList.add('open');\n    });\n  }\n  closeMegaMenu() {\n    body.unlock();\n    makeAccessible(this.$openMegaMenuButton);\n    makeUnaccessible(this.$closeMegaMenuButton);\n    makeUnaccessible(this.$megaMenu);\n    this.$openMegaMenuButton.classList.add('open');\n    this.$closeMegaMenuButton.classList.remove('open');\n    this.$domElement.classList.remove('mega-menu-open');\n    this.$megaMenu.classList.remove('open');\n  }\n  openSubMenu(e) {\n    if (e.currentTarget.classList.contains('open')) {\n      this.closeSubmenu();\n      return;\n    }\n    this.showSubMenu = true;\n    this.$activeSubmenuButton = e.currentTarget;\n    const $subMenuEl = e.currentTarget.nextElementSibling;\n    this.$activeSubMenu = $subMenuEl;\n  }\n  closeSubmenu() {\n    this.$activeSubMenu = null;\n    this.$activeSubmenuButton = null;\n    this.showSubMenu = false;\n  }\n}\n/* harmony default export */ const header = (Header);\n;// CONCATENATED MODULE: ./index-header.js\n\n\n// Immediately upon DOMContentLoaded.\nwindow.addEventListener('DOMContentLoaded', () => {\n  new header(document.querySelector('.umw-header'));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///92\n")}},__webpack_exports__={};__webpack_modules__[92]()})();