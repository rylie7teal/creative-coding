let pencolor = "black"
function setup() {
createCanvas(600, 600);
    background(250);
   slider = createSlider(1, 15, 0, 0);
  slider.position(10, 10);
  slider.size(80);
}
//I was interested in exploring the idea of the p5js canvas as an actual canvas, and created a basic painting program.
//I was successful in my goal, as I did create a painting program with the ability to change the width of the brush and
//the color that you are painting with. 
//Users are able to free-draw, or they can click the "Inspire Me!" button and have a random idea generated for them.
//Users are also able to save their canvas to their computer by clicking the "Save Canvas" button. 
function draw() {
 
//creating stroke weight scale - original code
  // fill ("black");
  //   triangle(560, 250, 590, 250, 574, 450);
  // textSize(15);
  // //text ('Select', 575, 230);
  // textAlign(CENTER);
  // text ('Width', 575, 245);

//discovered p5js has a slider command, used that for stroke weight instead
  let penw = slider.value();
  strokeWeight (penw);

  fill(250);
  noStroke();
    rect(0,0,90,25);
  
//allowing user to pick color 
if (mouseIsPressed) {
    stroke(pencolor)
    line(mouseX, mouseY, pmouseX, pmouseY);

    if (mouseX > 550) {
      if (mouseY > 0 && mouseY < 25) { //red
        pencolor = "#ff595e";
      } 
      else if (mouseY > 25 && mouseY < 50) { //orange
        pencolor = "#ff924c";
      } 
      else if (mouseY > 50 && mouseY < 75) { //yellow
        pencolor = "#ffca3a";
      } 
      else if (mouseY > 75 && mouseY < 100) { //yellow-green
        pencolor = "#c5ca30";
      } 
      else if (mouseY > 100 && mouseY < 125) { //lime
        pencolor = "#8ac926";
      } 
      else if (mouseY > 125 && mouseY < 150) { // green
        pencolor = "#52a675";
      } 
      else if (mouseY > 150 && mouseY < 175) { //blue
        pencolor = "#1982c4";
      } 
      else if (mouseY > 125 && mouseY < 150) { //indigo
        pencolor = "#4267ac";
      } 
      else if (mouseY > 150 && mouseY < 175) { //purple
        pencolor = "#6a4c93";
      } 
       else if (mouseY > 175 && mouseY < 200) { //violet
        pencolor = "#b5a6c9";
      } 
      else if (mouseY > 200 && mouseY < 225) { //white
        pencolor = "white";
      } 
      else if (mouseY > 225 && mouseY < 250){ //black
        pencolor = "black";
      }
    }
  }
   
//creating color picker
//colors sourced from https://colorkit.co/palette/ff595e-ff924c-ffca3a-c5ca30-8ac926-52a675-1982c4-4267ac-6a4c93-b5a6c9/
 stroke("black");
  strokeWeight(1);
  
  fill("#ff595e"); //red
    rect(550, 0, 50, 25);
  fill("#ff924c"); //orange
    rect(550, 25, 50, 25);
  fill("#ffca3a"); //yellow
    rect(550, 50, 50, 25);
  fill("#c5ca30"); //yellow-green
    rect(550, 75, 50, 25);
  fill("#8ac926"); //lime 
    rect(550, 100, 50, 25);
  fill("#52a675"); //green
    rect(550, 125, 50, 25);
  fill("#1982c4"); //blue
    rect(550, 150, 50, 25);
  fill("#4267ac"); //indigo
    rect(550, 175, 50, 25);
  fill("#6a4c93"); //purple
    rect(550, 200, 50, 25);
  fill("#b5a6c9"); //violet
    rect(550, 225, 50, 25); 
  fill("white"); //white
    rect(550, 250, 50, 25); 
  fill("black"); //black
    rect (550, 275, 50, 25);


//creating Save button that calls saveCanvas when pressed
  let button1 = createButton('Save Drawing');
    button1.position(500, 575);
      button1.mousePressed(savecanvas);

//creating Clear button to delete the current canvas 
  let button2 = createButton('Clear');
    button2.position(300, 575);
      button2.mousePressed(clearcan);
  fill(250);
  noStroke();
    rect(290,565,52,25);
//creating button to generate ideas
   let button = createButton('Inspire Me!');
    button.position(50, 575);
      button.mousePressed(inspire);
}

//running savecanvas when button is pressed to save the drawing to the user's computer
function savecanvas(){
  saveCanvas(`AnAmazingDrawing.jpg`);
}

//running clear command to clear the canvas
function clearcan(){
  clear();
  background(250);
}

//running inspire function to generate ideas for the user
function inspire(){
  //creating arrays of animals and adjectives to give the users random things to draw.
  //some animals and adjectives were generated by my, but I also asked ChatGPT for lists of adjectives and animals
let animal = ['aardvark', 'anteater','whale','dog','cat','goldfish','giraffe','tiger','owl','panda','zebra'];
let adj = ['huge','tiny','smart','clever','bold','playful','mysterious','strong','curious','creative','majestic','beautiful'];

//picking random animal
  let animalchoice = random(animal);
  let adjchoice = random(adj);
//clearing canvas and resetting background color

 clear();
 background(250);
//creating text  
 textSize (20)
  fill('black');
  noStroke();

  text (`Please draw a: ${adjchoice} ${animalchoice}`, 150, 15);
  // text (adjchoice, 285, 15);
  // text (animalchoice, 315, 15);
}